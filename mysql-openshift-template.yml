apiVersion: v1
kind: Template
labels:
  template: ticket-monster-mysql
metadata:
  annotations:
    description: 'MySQL database service, without persistent storage. WARNING: Any
      data stored will be lost upon pod destruction. Only use this template for testing'
    iconClass: icon-mysql-database
    tags: database,mysql
  creationTimestamp: null
  name: ticket-monster-mysql
objects:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    portalIP: ''
    ports:
    - name: mysql
      nodePort: 0
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
          - name: "MYSQL_MASTER_USER"
            value: "${MYSQL_MASTER_USER}"
          - name: "MYSQL_MASTER_PASSWORD"
            value: "${MYSQL_MASTER_PASSWORD}"
          - name: "MYSQL_ROOT_PASSWORD"
            value: "${MYSQL_ROOT_PASSWORD}"
          - name: "MYSQL_BINLOG_FORMAT"
            value: "ROW"
          image: docker.io/centos/mysql-56-centos7:latest
          imagePullPolicy: IfNotPresent
          command:
          - "run-mysqld-master"
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: ${DATABASE_SERVICE_NAME}
          ports:
          - containerPort: 3306
            protocol: TCP
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${DATABASE_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir:
            medium: ''
          name: ${DATABASE_SERVICE_NAME}-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql-56-centos7:latest
          namespace: ${NAMESPACE}
        lastTriggeredImage: ''
      type: ImageChange
    - type: ConfigChange
  status: {}
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL User
  from: user[A-Z0-9]{3}
  generate: expression
  name: MYSQL_USER
  required: true
  value: ticket
- description: Password for the MySQL user.
  displayName: MySQL Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  value: monster
- description: Username for MySQL user that will access the database as a slave
  displayName: MySQL Master User
  from: user[A-Z0-9]{3}
  generate: expression
  name: MYSQL_MASTER_USER
  required: false
  value: replicator
- description: Password for the MySQL Masteruser.
  displayName: MySQL Master Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_MASTER_PASSWORD
  required: false
  value: replpass
- description: Root password
  displayName: MySQL Root Password
  from: '[a-zA-Z0-9]{16}'
  value: admin
  name: MYSQL_ROOT_PASSWORD
  required: true
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: ticketmonster
